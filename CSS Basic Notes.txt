Javascript/ HTML / CSS
----------------------

THE
PURPLE      CSS         - adjective    style, colour, fonts, etc
DINO        HTML        - nouns        structure of the web page
DANCED      JavaScript  - verbs        behavior / actions etc on the above

CSS Is Used to Style and Manipulate the HTML Web Page
-----------------------------------------------------

CSS stands for Cascading Style Sheets

CSS is a language for describing how documents are presented visually and how
they are arranged and styled. It is not a programming language.

CSS is a stylesheet language used to describe the presentation of a document written 
in HTML or XML (including XML dialects such as SVG, MathML or XHTML). 
CSS describes how elements should be rendered on screen, on paper, in speech, 
or on other media.

CSS is among the core languages of the open web and is standardized across 
Web browsers according to W3C specifications. 
Previously, development of various parts of CSS specification was done synchronously, 
which allowed versioning of the latest recommendations. 
You might have heard about CSS1, CSS2.1, CSS3. However, CSS4 has never become an official version.

From CSS3, the scope of the specification increased significantly and the progress on different 
CSS modules started to differ so much, that it became more effective to develop and release 
recommendations separately per module. Instead of versioning the CSS specification, W3C now 
periodically takes a snapshot of the latest stable state of the CSS specification.

CSS is very easy to get the hang of but it can be intimidating because of how
many properties we can manipulate. There could be upto 50 properties just for borders


Generic CSS Basic Pattern / Template
------------------------------------

Note: If you do NOT put the semicolon at the end of your property value CSS will ignore
      ALL the properties for that selector.

        selector {
            property: value;
        }

    This would make ALL <h1> elements purple
        
        h1 {
            color: purple;
        }
    
    Make ALL image elements 100 pixels wide and 200 pixels tall
        
        img {
            width: 100px;
            height: 200px;
        }
    
    Select EVERY OTHER text input and give it a red border

        input[type="text"]:nth-of-type(2n) {
            border: 2px solid red;
        }

        I want all inputs of type text and I want every other one, every 2nd one.
    

Including Styles
----------------

    Inline Styles

        You can write your styles directly inline on each html element.
        Most of the time this is not a goods idea.

    The <style> element

        You can write your styles inside of the a <style> element.
        This is easy, but it makes it impossible to share styles between documents.
        Not recommended either.

    External Stylesheet

        Write your styles in a '.css' file and then include them using a <link>
        in the head of your html document.
        RECOMMENDED

Some of the Different Properties You Can Set for an Element.
------------------------------------------------------------

Properties are in the curly braces {}

    color, changing the text color:

        Accepts different types of values:
            Named color: rebeccapurple;
            Hexadecimal color : #00ff00;
            rgb color: rgb(214, 122, 127);
            rgba color:rgba(214,122,127, .5);
            hsl color: hsl(30, 100%, 50%);
            hsla color: hsla(30, 100%, 50%, .3);
            initial color: initial;
    
    background-color, changing the background color

            Named background-color: brown;
            Hexadecimal background-color : #74992e;
            rgb background-color: rgb(255, 255, 128);
            rgba background-color:rgba(255, 255, 128, .5);
            hsl background-color: hsl(50, 33%, 25%);
            hsla background-color: hsla(50, 33%, 25%, .3);
            initial background-color: initial;

    There are approximately 140 name colors which you can reference by
    name, hex code or RGB value. This is a limited set of colors.
    Most monitors these days display 16,000,000 colors.

    RGB Colors red, green, blue
    ---------------------------

    These are different colors of light which you can add together to
    make different colors.

    Each channel (color) goes from 0 to 255, 0 means off.

        rgb(255, 0, 0)  maximum red, no other colors
        rgb(0, 0, 255)  maximum blue, no other colors
        rgb(0, 255, 0)  maximum green, no other colors
        rgb(173, 20,219) mixed three different colors together
        rgb(0,0,0)      no colors, no light, so black
        rgb(255,255,255) mixed maximum all colors, so white

    Use a color picker.

    Hexadecimal Colors red, green, blue channels
    --------------------------------------------

    Each channel ranges from 0 to 255 but represented by a hex value
    prefixed with the # symbol. 

        hex #AD14DB same as rgb(173, 20,219)

        hex #CC55EE can be shortened to #C5E shortening the hex pairs into about
        single character when the characters in a pair are duplicated.

        hex #CC46AA  #C46A  All three pairs have to have duplicated values.
    
    Use a color picker.

    HSL Colors red, green, blue
    ---------------------------
    This is based upon hue, saturation and lightness values.
    This is not commonly used.

        hue
            Think of a color wheel. Around 0o and 360o are reds 
            120o are greens, 240o are blues. 
            Use anything in between 0-360. Values above and below will be 
            modulus 360.
        
        Saturation
            0% is completely denatured (grayscale). 
            100% is fully saturated (full color).
        
        Lightness
            0% is completely dark (black). 
            100% is completely light (white). 
            50% is average lightness.

        Opacity, Used with rgba and hsla and an 8 digit hex value
            Opacity/Transparency value. 
            0 is fully transparent. 
            1 is fully opaque. 
            0.5 is 50% transparent.

              rgba(173, 20, 219, .75)       75% transparent
              hsla(180, 75%, 50%, .25)      25% transparent
              #74992E4D                     30% Transparency

              To see The Hexadecimal Opaque value see the file
              'Hexadecimal Opaque Values.txt'

    Text Properties
    ---------------

        text-align
             CSS property sets the horizontal alignment of a BLOCK element or TABLE-CELL box. 
             This means it works like vertical-align but in the horizontal direction.
             It does not define where on the screen the text will appear.

             Syntax
                /* Keyword values */
                text-align: left;
                text-align: right;
                text-align: center;
                text-align: justify;
                text-align: justify-all;
                text-align: start;
                text-align: end;
                text-align: match-parent;

                /* Character-based alignment in a table column */
                text-align: ".";
                text-align: "." center;

                /* Block alignment values (Non-standard syntax) */
                text-align: -moz-center;
                text-align: -webkit-center;

                /* Global values */
                text-align: inherit;
                text-align: initial;
                text-align: unset;
            
            The text-align property is specified in one of the following ways:
                - Using the keyword values start, end, left, right, center, 
                  justify, justify-all, or match-parent.
                - Using a <string> value only, in which case the other value 
                  defaults to right.
                - Using both a keyword value and a <string> value.

            Values:
                start 
                    - The same as left if direction is left-to-right and right 
                      if direction is right-to-left.
                end 
                    - The same as right if direction is left-to-right and left 
                      if direction is right-to-left.
                left
                    - The inline contents are aligned to the left edge of the line box.
                right
                    - The inline contents are aligned to the right edge of the line box.
                center
                    - The inline contents are centered within the line box.
                justify
                    - The inline contents are justified. Text should be spaced to line up 
                      its left and right edges to the left and right edges of the line box, 
                      except for the last line.
                justify-all 
                    - Same as justify, but also forces the last line to be justified.
                match-parent 
                    - Similar to inherit, but the values start and end are calculated 
                      according to the parent's direction and are replaced by the 
                      appropriate left or right value.
                <string> 
                    - When applied to a table cell, specifies the alignment character 
                      around which the cell's contents will align.

        font-weight
        text-decoration
        line-height
        letter-spacing






    